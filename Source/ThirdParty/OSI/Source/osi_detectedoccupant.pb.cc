// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_detectedoccupant.proto

#include "osi_detectedoccupant.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace osi3 {
PROTOBUF_CONSTEXPR DetectedOccupant_CandidateOccupant::DetectedOccupant_CandidateOccupant(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.classification_)*/nullptr
  , /*decltype(_impl_.probability_)*/0} {}
struct DetectedOccupant_CandidateOccupantDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DetectedOccupant_CandidateOccupantDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DetectedOccupant_CandidateOccupantDefaultTypeInternal() {}
  union {
    DetectedOccupant_CandidateOccupant _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DetectedOccupant_CandidateOccupantDefaultTypeInternal _DetectedOccupant_CandidateOccupant_default_instance_;
PROTOBUF_CONSTEXPR DetectedOccupant::DetectedOccupant(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.candidate_)*/{}
  , /*decltype(_impl_.header_)*/nullptr} {}
struct DetectedOccupantDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DetectedOccupantDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DetectedOccupantDefaultTypeInternal() {}
  union {
    DetectedOccupant _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DetectedOccupantDefaultTypeInternal _DetectedOccupant_default_instance_;
}  // namespace osi3
static ::_pb::Metadata file_level_metadata_osi_5fdetectedoccupant_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_osi_5fdetectedoccupant_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_osi_5fdetectedoccupant_2eproto = nullptr;

const uint32_t TableStruct_osi_5fdetectedoccupant_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::osi3::DetectedOccupant_CandidateOccupant, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::osi3::DetectedOccupant_CandidateOccupant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::osi3::DetectedOccupant_CandidateOccupant, _impl_.probability_),
  PROTOBUF_FIELD_OFFSET(::osi3::DetectedOccupant_CandidateOccupant, _impl_.classification_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::osi3::DetectedOccupant, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::osi3::DetectedOccupant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::osi3::DetectedOccupant, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::osi3::DetectedOccupant, _impl_.candidate_),
  0,
  ~0u,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::osi3::DetectedOccupant_CandidateOccupant)},
  { 10, 18, -1, sizeof(::osi3::DetectedOccupant)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::osi3::_DetectedOccupant_CandidateOccupant_default_instance_._instance,
  &::osi3::_DetectedOccupant_default_instance_._instance,
};

const char descriptor_table_protodef_osi_5fdetectedoccupant_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032osi_detectedoccupant.proto\022\004osi3\032\022osi_"
  "occupant.proto\032\030osi_detectedobject.proto"
  "\"\332\001\n\020DetectedOccupant\022(\n\006header\030\001 \001(\0132\030."
  "osi3.DetectedItemHeader\022;\n\tcandidate\030\002 \003"
  "(\0132(.osi3.DetectedOccupant.CandidateOccu"
  "pant\032_\n\021CandidateOccupant\022\023\n\013probability"
  "\030\001 \001(\001\0225\n\016classification\030\002 \001(\0132\035.osi3.Oc"
  "cupant.ClassificationB\002H\001"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_osi_5fdetectedoccupant_2eproto_deps[2] = {
  &::descriptor_table_osi_5fdetectedobject_2eproto,
  &::descriptor_table_osi_5foccupant_2eproto,
};
static ::_pbi::once_flag descriptor_table_osi_5fdetectedoccupant_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_osi_5fdetectedoccupant_2eproto = {
    false, false, 305, descriptor_table_protodef_osi_5fdetectedoccupant_2eproto,
    "osi_detectedoccupant.proto",
    &descriptor_table_osi_5fdetectedoccupant_2eproto_once, descriptor_table_osi_5fdetectedoccupant_2eproto_deps, 2, 2,
    schemas, file_default_instances, TableStruct_osi_5fdetectedoccupant_2eproto::offsets,
    file_level_metadata_osi_5fdetectedoccupant_2eproto, file_level_enum_descriptors_osi_5fdetectedoccupant_2eproto,
    file_level_service_descriptors_osi_5fdetectedoccupant_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_osi_5fdetectedoccupant_2eproto_getter() {
  return &descriptor_table_osi_5fdetectedoccupant_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_osi_5fdetectedoccupant_2eproto(&descriptor_table_osi_5fdetectedoccupant_2eproto);
namespace osi3 {

// ===================================================================

class DetectedOccupant_CandidateOccupant::_Internal {
 public:
  using HasBits = decltype(std::declval<DetectedOccupant_CandidateOccupant>()._impl_._has_bits_);
  static void set_has_probability(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::osi3::Occupant_Classification& classification(const DetectedOccupant_CandidateOccupant* msg);
  static void set_has_classification(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osi3::Occupant_Classification&
DetectedOccupant_CandidateOccupant::_Internal::classification(const DetectedOccupant_CandidateOccupant* msg) {
  return *msg->_impl_.classification_;
}
void DetectedOccupant_CandidateOccupant::clear_classification() {
  if (_impl_.classification_ != nullptr) _impl_.classification_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DetectedOccupant_CandidateOccupant::DetectedOccupant_CandidateOccupant(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:osi3.DetectedOccupant.CandidateOccupant)
}
DetectedOccupant_CandidateOccupant::DetectedOccupant_CandidateOccupant(const DetectedOccupant_CandidateOccupant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DetectedOccupant_CandidateOccupant* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.classification_){nullptr}
    , decltype(_impl_.probability_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_classification()) {
    _this->_impl_.classification_ = new ::osi3::Occupant_Classification(*from._impl_.classification_);
  }
  _this->_impl_.probability_ = from._impl_.probability_;
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedOccupant.CandidateOccupant)
}

inline void DetectedOccupant_CandidateOccupant::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.classification_){nullptr}
    , decltype(_impl_.probability_){0}
  };
}

DetectedOccupant_CandidateOccupant::~DetectedOccupant_CandidateOccupant() {
  // @@protoc_insertion_point(destructor:osi3.DetectedOccupant.CandidateOccupant)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DetectedOccupant_CandidateOccupant::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.classification_;
}

void DetectedOccupant_CandidateOccupant::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DetectedOccupant_CandidateOccupant::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedOccupant.CandidateOccupant)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.classification_ != nullptr);
    _impl_.classification_->Clear();
  }
  _impl_.probability_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DetectedOccupant_CandidateOccupant::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional double probability = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_probability(&has_bits);
          _impl_.probability_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional .osi3.Occupant.Classification classification = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_classification(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DetectedOccupant_CandidateOccupant::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedOccupant.CandidateOccupant)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double probability = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_probability(), target);
  }

  // optional .osi3.Occupant.Classification classification = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::classification(this),
        _Internal::classification(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedOccupant.CandidateOccupant)
  return target;
}

size_t DetectedOccupant_CandidateOccupant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedOccupant.CandidateOccupant)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .osi3.Occupant.Classification classification = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.classification_);
    }

    // optional double probability = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DetectedOccupant_CandidateOccupant::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DetectedOccupant_CandidateOccupant::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DetectedOccupant_CandidateOccupant::GetClassData() const { return &_class_data_; }


void DetectedOccupant_CandidateOccupant::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DetectedOccupant_CandidateOccupant*>(&to_msg);
  auto& from = static_cast<const DetectedOccupant_CandidateOccupant&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedOccupant.CandidateOccupant)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_classification()->::osi3::Occupant_Classification::MergeFrom(
          from._internal_classification());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.probability_ = from._impl_.probability_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DetectedOccupant_CandidateOccupant::CopyFrom(const DetectedOccupant_CandidateOccupant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedOccupant.CandidateOccupant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedOccupant_CandidateOccupant::IsInitialized() const {
  return true;
}

void DetectedOccupant_CandidateOccupant::InternalSwap(DetectedOccupant_CandidateOccupant* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DetectedOccupant_CandidateOccupant, _impl_.probability_)
      + sizeof(DetectedOccupant_CandidateOccupant::_impl_.probability_)
      - PROTOBUF_FIELD_OFFSET(DetectedOccupant_CandidateOccupant, _impl_.classification_)>(
          reinterpret_cast<char*>(&_impl_.classification_),
          reinterpret_cast<char*>(&other->_impl_.classification_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DetectedOccupant_CandidateOccupant::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_osi_5fdetectedoccupant_2eproto_getter, &descriptor_table_osi_5fdetectedoccupant_2eproto_once,
      file_level_metadata_osi_5fdetectedoccupant_2eproto[0]);
}

// ===================================================================

class DetectedOccupant::_Internal {
 public:
  using HasBits = decltype(std::declval<DetectedOccupant>()._impl_._has_bits_);
  static const ::osi3::DetectedItemHeader& header(const DetectedOccupant* msg);
  static void set_has_header(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::osi3::DetectedItemHeader&
DetectedOccupant::_Internal::header(const DetectedOccupant* msg) {
  return *msg->_impl_.header_;
}
void DetectedOccupant::clear_header() {
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DetectedOccupant::DetectedOccupant(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:osi3.DetectedOccupant)
}
DetectedOccupant::DetectedOccupant(const DetectedOccupant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DetectedOccupant* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.candidate_){from._impl_.candidate_}
    , decltype(_impl_.header_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::osi3::DetectedItemHeader(*from._impl_.header_);
  }
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedOccupant)
}

inline void DetectedOccupant::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.candidate_){arena}
    , decltype(_impl_.header_){nullptr}
  };
}

DetectedOccupant::~DetectedOccupant() {
  // @@protoc_insertion_point(destructor:osi3.DetectedOccupant)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DetectedOccupant::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.candidate_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.header_;
}

void DetectedOccupant::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DetectedOccupant::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedOccupant)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.candidate_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DetectedOccupant::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .osi3.DetectedItemHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .osi3.DetectedOccupant.CandidateOccupant candidate = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_candidate(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DetectedOccupant::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedOccupant)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .osi3.DetectedItemHeader header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // repeated .osi3.DetectedOccupant.CandidateOccupant candidate = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_candidate_size()); i < n; i++) {
    const auto& repfield = this->_internal_candidate(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedOccupant)
  return target;
}

size_t DetectedOccupant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedOccupant)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osi3.DetectedOccupant.CandidateOccupant candidate = 2;
  total_size += 1UL * this->_internal_candidate_size();
  for (const auto& msg : this->_impl_.candidate_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .osi3.DetectedItemHeader header = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DetectedOccupant::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DetectedOccupant::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DetectedOccupant::GetClassData() const { return &_class_data_; }


void DetectedOccupant::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DetectedOccupant*>(&to_msg);
  auto& from = static_cast<const DetectedOccupant&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedOccupant)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.candidate_.MergeFrom(from._impl_.candidate_);
  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::osi3::DetectedItemHeader::MergeFrom(
        from._internal_header());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DetectedOccupant::CopyFrom(const DetectedOccupant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedOccupant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedOccupant::IsInitialized() const {
  return true;
}

void DetectedOccupant::InternalSwap(DetectedOccupant* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.candidate_.InternalSwap(&other->_impl_.candidate_);
  swap(_impl_.header_, other->_impl_.header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DetectedOccupant::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_osi_5fdetectedoccupant_2eproto_getter, &descriptor_table_osi_5fdetectedoccupant_2eproto_once,
      file_level_metadata_osi_5fdetectedoccupant_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace osi3
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::osi3::DetectedOccupant_CandidateOccupant*
Arena::CreateMaybeMessage< ::osi3::DetectedOccupant_CandidateOccupant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osi3::DetectedOccupant_CandidateOccupant >(arena);
}
template<> PROTOBUF_NOINLINE ::osi3::DetectedOccupant*
Arena::CreateMaybeMessage< ::osi3::DetectedOccupant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osi3::DetectedOccupant >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
