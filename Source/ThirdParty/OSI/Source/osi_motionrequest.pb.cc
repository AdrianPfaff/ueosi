// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_motionrequest.proto

#include "osi_motionrequest.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace osi3 {
PROTOBUF_CONSTEXPR MotionRequest_DesiredState::MotionRequest_DesiredState(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.timestamp_)*/nullptr
  , /*decltype(_impl_.position_)*/nullptr
  , /*decltype(_impl_.orientation_)*/nullptr
  , /*decltype(_impl_.velocity_)*/nullptr
  , /*decltype(_impl_.acceleration_)*/nullptr} {}
struct MotionRequest_DesiredStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MotionRequest_DesiredStateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MotionRequest_DesiredStateDefaultTypeInternal() {}
  union {
    MotionRequest_DesiredState _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MotionRequest_DesiredStateDefaultTypeInternal _MotionRequest_DesiredState_default_instance_;
PROTOBUF_CONSTEXPR MotionRequest_DesiredTrajectory::MotionRequest_DesiredTrajectory(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.trajectory_point_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MotionRequest_DesiredTrajectoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MotionRequest_DesiredTrajectoryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MotionRequest_DesiredTrajectoryDefaultTypeInternal() {}
  union {
    MotionRequest_DesiredTrajectory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MotionRequest_DesiredTrajectoryDefaultTypeInternal _MotionRequest_DesiredTrajectory_default_instance_;
PROTOBUF_CONSTEXPR MotionRequest::MotionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.version_)*/nullptr
  , /*decltype(_impl_.timestamp_)*/nullptr
  , /*decltype(_impl_.desired_state_)*/nullptr
  , /*decltype(_impl_.desired_trajectory_)*/nullptr
  , /*decltype(_impl_.motion_request_type_)*/0} {}
struct MotionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MotionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MotionRequestDefaultTypeInternal() {}
  union {
    MotionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MotionRequestDefaultTypeInternal _MotionRequest_default_instance_;
}  // namespace osi3
static ::_pb::Metadata file_level_metadata_osi_5fmotionrequest_2eproto[3];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_osi_5fmotionrequest_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_osi_5fmotionrequest_2eproto = nullptr;

const uint32_t TableStruct_osi_5fmotionrequest_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::osi3::MotionRequest_DesiredState, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::osi3::MotionRequest_DesiredState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::osi3::MotionRequest_DesiredState, _impl_.timestamp_),
  PROTOBUF_FIELD_OFFSET(::osi3::MotionRequest_DesiredState, _impl_.position_),
  PROTOBUF_FIELD_OFFSET(::osi3::MotionRequest_DesiredState, _impl_.orientation_),
  PROTOBUF_FIELD_OFFSET(::osi3::MotionRequest_DesiredState, _impl_.velocity_),
  PROTOBUF_FIELD_OFFSET(::osi3::MotionRequest_DesiredState, _impl_.acceleration_),
  0,
  1,
  2,
  3,
  4,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osi3::MotionRequest_DesiredTrajectory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::osi3::MotionRequest_DesiredTrajectory, _impl_.trajectory_point_),
  PROTOBUF_FIELD_OFFSET(::osi3::MotionRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::osi3::MotionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::osi3::MotionRequest, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::osi3::MotionRequest, _impl_.timestamp_),
  PROTOBUF_FIELD_OFFSET(::osi3::MotionRequest, _impl_.motion_request_type_),
  PROTOBUF_FIELD_OFFSET(::osi3::MotionRequest, _impl_.desired_state_),
  PROTOBUF_FIELD_OFFSET(::osi3::MotionRequest, _impl_.desired_trajectory_),
  0,
  1,
  4,
  2,
  3,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, -1, sizeof(::osi3::MotionRequest_DesiredState)},
  { 16, -1, -1, sizeof(::osi3::MotionRequest_DesiredTrajectory)},
  { 23, 34, -1, sizeof(::osi3::MotionRequest)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::osi3::_MotionRequest_DesiredState_default_instance_._instance,
  &::osi3::_MotionRequest_DesiredTrajectory_default_instance_._instance,
  &::osi3::_MotionRequest_default_instance_._instance,
};

const char descriptor_table_protodef_osi_5fmotionrequest_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027osi_motionrequest.proto\022\004osi3\032\020osi_com"
  "mon.proto\032\021osi_version.proto\"\206\005\n\rMotionR"
  "equest\022\'\n\007version\030\001 \001(\0132\026.osi3.Interface"
  "Version\022\"\n\ttimestamp\030\002 \001(\0132\017.osi3.Timest"
  "amp\022B\n\023motion_request_type\030\003 \001(\0162%.osi3."
  "MotionRequest.MotionRequestType\0227\n\rdesir"
  "ed_state\030\004 \001(\0132 .osi3.MotionRequest.Desi"
  "redState\022A\n\022desired_trajectory\030\005 \001(\0132%.o"
  "si3.MotionRequest.DesiredTrajectory\032\306\001\n\014"
  "DesiredState\022\"\n\ttimestamp\030\001 \001(\0132\017.osi3.T"
  "imestamp\022 \n\010position\030\002 \001(\0132\016.osi3.Vector"
  "3d\022(\n\013orientation\030\003 \001(\0132\023.osi3.Orientati"
  "on3d\022 \n\010velocity\030\004 \001(\0132\016.osi3.Vector3d\022$"
  "\n\014acceleration\030\005 \001(\0132\016.osi3.Vector3d\032\?\n\021"
  "DesiredTrajectory\022*\n\020trajectory_point\030\001 "
  "\003(\0132\020.osi3.StatePoint\"^\n\021MotionRequestTy"
  "pe\022%\n!MOTION_REQUEST_TYPE_DESIRED_STATE\020"
  "\000\022\"\n\036MOTION_REQUEST_TYPE_TRAJECTORY\020\001B\002H"
  "\001"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_osi_5fmotionrequest_2eproto_deps[2] = {
  &::descriptor_table_osi_5fcommon_2eproto,
  &::descriptor_table_osi_5fversion_2eproto,
};
static ::_pbi::once_flag descriptor_table_osi_5fmotionrequest_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_osi_5fmotionrequest_2eproto = {
    false, false, 721, descriptor_table_protodef_osi_5fmotionrequest_2eproto,
    "osi_motionrequest.proto",
    &descriptor_table_osi_5fmotionrequest_2eproto_once, descriptor_table_osi_5fmotionrequest_2eproto_deps, 2, 3,
    schemas, file_default_instances, TableStruct_osi_5fmotionrequest_2eproto::offsets,
    file_level_metadata_osi_5fmotionrequest_2eproto, file_level_enum_descriptors_osi_5fmotionrequest_2eproto,
    file_level_service_descriptors_osi_5fmotionrequest_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_osi_5fmotionrequest_2eproto_getter() {
  return &descriptor_table_osi_5fmotionrequest_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_osi_5fmotionrequest_2eproto(&descriptor_table_osi_5fmotionrequest_2eproto);
namespace osi3 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MotionRequest_MotionRequestType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_osi_5fmotionrequest_2eproto);
  return file_level_enum_descriptors_osi_5fmotionrequest_2eproto[0];
}
bool MotionRequest_MotionRequestType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr MotionRequest_MotionRequestType MotionRequest::MOTION_REQUEST_TYPE_DESIRED_STATE;
constexpr MotionRequest_MotionRequestType MotionRequest::MOTION_REQUEST_TYPE_TRAJECTORY;
constexpr MotionRequest_MotionRequestType MotionRequest::MotionRequestType_MIN;
constexpr MotionRequest_MotionRequestType MotionRequest::MotionRequestType_MAX;
constexpr int MotionRequest::MotionRequestType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class MotionRequest_DesiredState::_Internal {
 public:
  using HasBits = decltype(std::declval<MotionRequest_DesiredState>()._impl_._has_bits_);
  static const ::osi3::Timestamp& timestamp(const MotionRequest_DesiredState* msg);
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::osi3::Vector3d& position(const MotionRequest_DesiredState* msg);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::osi3::Orientation3d& orientation(const MotionRequest_DesiredState* msg);
  static void set_has_orientation(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::osi3::Vector3d& velocity(const MotionRequest_DesiredState* msg);
  static void set_has_velocity(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::osi3::Vector3d& acceleration(const MotionRequest_DesiredState* msg);
  static void set_has_acceleration(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::osi3::Timestamp&
MotionRequest_DesiredState::_Internal::timestamp(const MotionRequest_DesiredState* msg) {
  return *msg->_impl_.timestamp_;
}
const ::osi3::Vector3d&
MotionRequest_DesiredState::_Internal::position(const MotionRequest_DesiredState* msg) {
  return *msg->_impl_.position_;
}
const ::osi3::Orientation3d&
MotionRequest_DesiredState::_Internal::orientation(const MotionRequest_DesiredState* msg) {
  return *msg->_impl_.orientation_;
}
const ::osi3::Vector3d&
MotionRequest_DesiredState::_Internal::velocity(const MotionRequest_DesiredState* msg) {
  return *msg->_impl_.velocity_;
}
const ::osi3::Vector3d&
MotionRequest_DesiredState::_Internal::acceleration(const MotionRequest_DesiredState* msg) {
  return *msg->_impl_.acceleration_;
}
void MotionRequest_DesiredState::clear_timestamp() {
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void MotionRequest_DesiredState::clear_position() {
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void MotionRequest_DesiredState::clear_orientation() {
  if (_impl_.orientation_ != nullptr) _impl_.orientation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void MotionRequest_DesiredState::clear_velocity() {
  if (_impl_.velocity_ != nullptr) _impl_.velocity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void MotionRequest_DesiredState::clear_acceleration() {
  if (_impl_.acceleration_ != nullptr) _impl_.acceleration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
MotionRequest_DesiredState::MotionRequest_DesiredState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:osi3.MotionRequest.DesiredState)
}
MotionRequest_DesiredState::MotionRequest_DesiredState(const MotionRequest_DesiredState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MotionRequest_DesiredState* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.timestamp_){nullptr}
    , decltype(_impl_.position_){nullptr}
    , decltype(_impl_.orientation_){nullptr}
    , decltype(_impl_.velocity_){nullptr}
    , decltype(_impl_.acceleration_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_timestamp()) {
    _this->_impl_.timestamp_ = new ::osi3::Timestamp(*from._impl_.timestamp_);
  }
  if (from._internal_has_position()) {
    _this->_impl_.position_ = new ::osi3::Vector3d(*from._impl_.position_);
  }
  if (from._internal_has_orientation()) {
    _this->_impl_.orientation_ = new ::osi3::Orientation3d(*from._impl_.orientation_);
  }
  if (from._internal_has_velocity()) {
    _this->_impl_.velocity_ = new ::osi3::Vector3d(*from._impl_.velocity_);
  }
  if (from._internal_has_acceleration()) {
    _this->_impl_.acceleration_ = new ::osi3::Vector3d(*from._impl_.acceleration_);
  }
  // @@protoc_insertion_point(copy_constructor:osi3.MotionRequest.DesiredState)
}

inline void MotionRequest_DesiredState::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.timestamp_){nullptr}
    , decltype(_impl_.position_){nullptr}
    , decltype(_impl_.orientation_){nullptr}
    , decltype(_impl_.velocity_){nullptr}
    , decltype(_impl_.acceleration_){nullptr}
  };
}

MotionRequest_DesiredState::~MotionRequest_DesiredState() {
  // @@protoc_insertion_point(destructor:osi3.MotionRequest.DesiredState)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MotionRequest_DesiredState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.timestamp_;
  if (this != internal_default_instance()) delete _impl_.position_;
  if (this != internal_default_instance()) delete _impl_.orientation_;
  if (this != internal_default_instance()) delete _impl_.velocity_;
  if (this != internal_default_instance()) delete _impl_.acceleration_;
}

void MotionRequest_DesiredState::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MotionRequest_DesiredState::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.MotionRequest.DesiredState)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.orientation_ != nullptr);
      _impl_.orientation_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.velocity_ != nullptr);
      _impl_.velocity_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.acceleration_ != nullptr);
      _impl_.acceleration_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MotionRequest_DesiredState::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .osi3.Timestamp timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_timestamp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .osi3.Vector3d position = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .osi3.Orientation3d orientation = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_orientation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .osi3.Vector3d velocity = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_velocity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .osi3.Vector3d acceleration = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_acceleration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MotionRequest_DesiredState::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osi3.MotionRequest.DesiredState)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .osi3.Timestamp timestamp = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::timestamp(this),
        _Internal::timestamp(this).GetCachedSize(), target, stream);
  }

  // optional .osi3.Vector3d position = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  // optional .osi3.Orientation3d orientation = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::orientation(this),
        _Internal::orientation(this).GetCachedSize(), target, stream);
  }

  // optional .osi3.Vector3d velocity = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::velocity(this),
        _Internal::velocity(this).GetCachedSize(), target, stream);
  }

  // optional .osi3.Vector3d acceleration = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::acceleration(this),
        _Internal::acceleration(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.MotionRequest.DesiredState)
  return target;
}

size_t MotionRequest_DesiredState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.MotionRequest.DesiredState)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .osi3.Timestamp timestamp = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.timestamp_);
    }

    // optional .osi3.Vector3d position = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.position_);
    }

    // optional .osi3.Orientation3d orientation = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.orientation_);
    }

    // optional .osi3.Vector3d velocity = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.velocity_);
    }

    // optional .osi3.Vector3d acceleration = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.acceleration_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MotionRequest_DesiredState::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MotionRequest_DesiredState::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MotionRequest_DesiredState::GetClassData() const { return &_class_data_; }


void MotionRequest_DesiredState::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MotionRequest_DesiredState*>(&to_msg);
  auto& from = static_cast<const MotionRequest_DesiredState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osi3.MotionRequest.DesiredState)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_timestamp()->::osi3::Timestamp::MergeFrom(
          from._internal_timestamp());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_position()->::osi3::Vector3d::MergeFrom(
          from._internal_position());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_orientation()->::osi3::Orientation3d::MergeFrom(
          from._internal_orientation());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_velocity()->::osi3::Vector3d::MergeFrom(
          from._internal_velocity());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_acceleration()->::osi3::Vector3d::MergeFrom(
          from._internal_acceleration());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MotionRequest_DesiredState::CopyFrom(const MotionRequest_DesiredState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.MotionRequest.DesiredState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MotionRequest_DesiredState::IsInitialized() const {
  return true;
}

void MotionRequest_DesiredState::InternalSwap(MotionRequest_DesiredState* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MotionRequest_DesiredState, _impl_.acceleration_)
      + sizeof(MotionRequest_DesiredState::_impl_.acceleration_)
      - PROTOBUF_FIELD_OFFSET(MotionRequest_DesiredState, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MotionRequest_DesiredState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_osi_5fmotionrequest_2eproto_getter, &descriptor_table_osi_5fmotionrequest_2eproto_once,
      file_level_metadata_osi_5fmotionrequest_2eproto[0]);
}

// ===================================================================

class MotionRequest_DesiredTrajectory::_Internal {
 public:
};

void MotionRequest_DesiredTrajectory::clear_trajectory_point() {
  _impl_.trajectory_point_.Clear();
}
MotionRequest_DesiredTrajectory::MotionRequest_DesiredTrajectory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:osi3.MotionRequest.DesiredTrajectory)
}
MotionRequest_DesiredTrajectory::MotionRequest_DesiredTrajectory(const MotionRequest_DesiredTrajectory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MotionRequest_DesiredTrajectory* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.trajectory_point_){from._impl_.trajectory_point_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:osi3.MotionRequest.DesiredTrajectory)
}

inline void MotionRequest_DesiredTrajectory::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.trajectory_point_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MotionRequest_DesiredTrajectory::~MotionRequest_DesiredTrajectory() {
  // @@protoc_insertion_point(destructor:osi3.MotionRequest.DesiredTrajectory)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MotionRequest_DesiredTrajectory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.trajectory_point_.~RepeatedPtrField();
}

void MotionRequest_DesiredTrajectory::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MotionRequest_DesiredTrajectory::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.MotionRequest.DesiredTrajectory)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trajectory_point_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MotionRequest_DesiredTrajectory::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .osi3.StatePoint trajectory_point = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_trajectory_point(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MotionRequest_DesiredTrajectory::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osi3.MotionRequest.DesiredTrajectory)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .osi3.StatePoint trajectory_point = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_trajectory_point_size()); i < n; i++) {
    const auto& repfield = this->_internal_trajectory_point(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.MotionRequest.DesiredTrajectory)
  return target;
}

size_t MotionRequest_DesiredTrajectory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.MotionRequest.DesiredTrajectory)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osi3.StatePoint trajectory_point = 1;
  total_size += 1UL * this->_internal_trajectory_point_size();
  for (const auto& msg : this->_impl_.trajectory_point_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MotionRequest_DesiredTrajectory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MotionRequest_DesiredTrajectory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MotionRequest_DesiredTrajectory::GetClassData() const { return &_class_data_; }


void MotionRequest_DesiredTrajectory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MotionRequest_DesiredTrajectory*>(&to_msg);
  auto& from = static_cast<const MotionRequest_DesiredTrajectory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osi3.MotionRequest.DesiredTrajectory)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.trajectory_point_.MergeFrom(from._impl_.trajectory_point_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MotionRequest_DesiredTrajectory::CopyFrom(const MotionRequest_DesiredTrajectory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.MotionRequest.DesiredTrajectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MotionRequest_DesiredTrajectory::IsInitialized() const {
  return true;
}

void MotionRequest_DesiredTrajectory::InternalSwap(MotionRequest_DesiredTrajectory* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.trajectory_point_.InternalSwap(&other->_impl_.trajectory_point_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MotionRequest_DesiredTrajectory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_osi_5fmotionrequest_2eproto_getter, &descriptor_table_osi_5fmotionrequest_2eproto_once,
      file_level_metadata_osi_5fmotionrequest_2eproto[1]);
}

// ===================================================================

class MotionRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<MotionRequest>()._impl_._has_bits_);
  static const ::osi3::InterfaceVersion& version(const MotionRequest* msg);
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::osi3::Timestamp& timestamp(const MotionRequest* msg);
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_motion_request_type(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::osi3::MotionRequest_DesiredState& desired_state(const MotionRequest* msg);
  static void set_has_desired_state(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::osi3::MotionRequest_DesiredTrajectory& desired_trajectory(const MotionRequest* msg);
  static void set_has_desired_trajectory(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::osi3::InterfaceVersion&
MotionRequest::_Internal::version(const MotionRequest* msg) {
  return *msg->_impl_.version_;
}
const ::osi3::Timestamp&
MotionRequest::_Internal::timestamp(const MotionRequest* msg) {
  return *msg->_impl_.timestamp_;
}
const ::osi3::MotionRequest_DesiredState&
MotionRequest::_Internal::desired_state(const MotionRequest* msg) {
  return *msg->_impl_.desired_state_;
}
const ::osi3::MotionRequest_DesiredTrajectory&
MotionRequest::_Internal::desired_trajectory(const MotionRequest* msg) {
  return *msg->_impl_.desired_trajectory_;
}
void MotionRequest::clear_version() {
  if (_impl_.version_ != nullptr) _impl_.version_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void MotionRequest::clear_timestamp() {
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
MotionRequest::MotionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:osi3.MotionRequest)
}
MotionRequest::MotionRequest(const MotionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MotionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.version_){nullptr}
    , decltype(_impl_.timestamp_){nullptr}
    , decltype(_impl_.desired_state_){nullptr}
    , decltype(_impl_.desired_trajectory_){nullptr}
    , decltype(_impl_.motion_request_type_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_version()) {
    _this->_impl_.version_ = new ::osi3::InterfaceVersion(*from._impl_.version_);
  }
  if (from._internal_has_timestamp()) {
    _this->_impl_.timestamp_ = new ::osi3::Timestamp(*from._impl_.timestamp_);
  }
  if (from._internal_has_desired_state()) {
    _this->_impl_.desired_state_ = new ::osi3::MotionRequest_DesiredState(*from._impl_.desired_state_);
  }
  if (from._internal_has_desired_trajectory()) {
    _this->_impl_.desired_trajectory_ = new ::osi3::MotionRequest_DesiredTrajectory(*from._impl_.desired_trajectory_);
  }
  _this->_impl_.motion_request_type_ = from._impl_.motion_request_type_;
  // @@protoc_insertion_point(copy_constructor:osi3.MotionRequest)
}

inline void MotionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.version_){nullptr}
    , decltype(_impl_.timestamp_){nullptr}
    , decltype(_impl_.desired_state_){nullptr}
    , decltype(_impl_.desired_trajectory_){nullptr}
    , decltype(_impl_.motion_request_type_){0}
  };
}

MotionRequest::~MotionRequest() {
  // @@protoc_insertion_point(destructor:osi3.MotionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MotionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.version_;
  if (this != internal_default_instance()) delete _impl_.timestamp_;
  if (this != internal_default_instance()) delete _impl_.desired_state_;
  if (this != internal_default_instance()) delete _impl_.desired_trajectory_;
}

void MotionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MotionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.MotionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.version_ != nullptr);
      _impl_.version_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.desired_state_ != nullptr);
      _impl_.desired_state_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.desired_trajectory_ != nullptr);
      _impl_.desired_trajectory_->Clear();
    }
  }
  _impl_.motion_request_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MotionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .osi3.InterfaceVersion version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_version(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .osi3.Timestamp timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_timestamp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .osi3.MotionRequest.MotionRequestType motion_request_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::osi3::MotionRequest_MotionRequestType_IsValid(val))) {
            _internal_set_motion_request_type(static_cast<::osi3::MotionRequest_MotionRequestType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .osi3.MotionRequest.DesiredState desired_state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_desired_state(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .osi3.MotionRequest.DesiredTrajectory desired_trajectory = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_desired_trajectory(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MotionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osi3.MotionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .osi3.InterfaceVersion version = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::version(this),
        _Internal::version(this).GetCachedSize(), target, stream);
  }

  // optional .osi3.Timestamp timestamp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::timestamp(this),
        _Internal::timestamp(this).GetCachedSize(), target, stream);
  }

  // optional .osi3.MotionRequest.MotionRequestType motion_request_type = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_motion_request_type(), target);
  }

  // optional .osi3.MotionRequest.DesiredState desired_state = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::desired_state(this),
        _Internal::desired_state(this).GetCachedSize(), target, stream);
  }

  // optional .osi3.MotionRequest.DesiredTrajectory desired_trajectory = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::desired_trajectory(this),
        _Internal::desired_trajectory(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.MotionRequest)
  return target;
}

size_t MotionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.MotionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .osi3.InterfaceVersion version = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.version_);
    }

    // optional .osi3.Timestamp timestamp = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.timestamp_);
    }

    // optional .osi3.MotionRequest.DesiredState desired_state = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.desired_state_);
    }

    // optional .osi3.MotionRequest.DesiredTrajectory desired_trajectory = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.desired_trajectory_);
    }

    // optional .osi3.MotionRequest.MotionRequestType motion_request_type = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_motion_request_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MotionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MotionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MotionRequest::GetClassData() const { return &_class_data_; }


void MotionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MotionRequest*>(&to_msg);
  auto& from = static_cast<const MotionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osi3.MotionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_version()->::osi3::InterfaceVersion::MergeFrom(
          from._internal_version());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_timestamp()->::osi3::Timestamp::MergeFrom(
          from._internal_timestamp());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_desired_state()->::osi3::MotionRequest_DesiredState::MergeFrom(
          from._internal_desired_state());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_desired_trajectory()->::osi3::MotionRequest_DesiredTrajectory::MergeFrom(
          from._internal_desired_trajectory());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.motion_request_type_ = from._impl_.motion_request_type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MotionRequest::CopyFrom(const MotionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.MotionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MotionRequest::IsInitialized() const {
  return true;
}

void MotionRequest::InternalSwap(MotionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MotionRequest, _impl_.motion_request_type_)
      + sizeof(MotionRequest::_impl_.motion_request_type_)
      - PROTOBUF_FIELD_OFFSET(MotionRequest, _impl_.version_)>(
          reinterpret_cast<char*>(&_impl_.version_),
          reinterpret_cast<char*>(&other->_impl_.version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MotionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_osi_5fmotionrequest_2eproto_getter, &descriptor_table_osi_5fmotionrequest_2eproto_once,
      file_level_metadata_osi_5fmotionrequest_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace osi3
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::osi3::MotionRequest_DesiredState*
Arena::CreateMaybeMessage< ::osi3::MotionRequest_DesiredState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osi3::MotionRequest_DesiredState >(arena);
}
template<> PROTOBUF_NOINLINE ::osi3::MotionRequest_DesiredTrajectory*
Arena::CreateMaybeMessage< ::osi3::MotionRequest_DesiredTrajectory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osi3::MotionRequest_DesiredTrajectory >(arena);
}
template<> PROTOBUF_NOINLINE ::osi3::MotionRequest*
Arena::CreateMaybeMessage< ::osi3::MotionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osi3::MotionRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
