// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_sensorspecific.proto

#include "osi_sensorspecific.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace osi3 {
PROTOBUF_CONSTEXPR RadarSpecificObjectData::RadarSpecificObjectData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.rcs_)*/0} {}
struct RadarSpecificObjectDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RadarSpecificObjectDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RadarSpecificObjectDataDefaultTypeInternal() {}
  union {
    RadarSpecificObjectData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RadarSpecificObjectDataDefaultTypeInternal _RadarSpecificObjectData_default_instance_;
PROTOBUF_CONSTEXPR LidarSpecificObjectData::LidarSpecificObjectData(
    ::_pbi::ConstantInitialized) {}
struct LidarSpecificObjectDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LidarSpecificObjectDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LidarSpecificObjectDataDefaultTypeInternal() {}
  union {
    LidarSpecificObjectData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LidarSpecificObjectDataDefaultTypeInternal _LidarSpecificObjectData_default_instance_;
PROTOBUF_CONSTEXPR CameraSpecificObjectData::CameraSpecificObjectData(
    ::_pbi::ConstantInitialized) {}
struct CameraSpecificObjectDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraSpecificObjectDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraSpecificObjectDataDefaultTypeInternal() {}
  union {
    CameraSpecificObjectData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraSpecificObjectDataDefaultTypeInternal _CameraSpecificObjectData_default_instance_;
PROTOBUF_CONSTEXPR UltrasonicSpecificObjectData_Signalway::UltrasonicSpecificObjectData_Signalway(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.sender_id_)*/nullptr
  , /*decltype(_impl_.receiver_id_)*/nullptr} {}
struct UltrasonicSpecificObjectData_SignalwayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UltrasonicSpecificObjectData_SignalwayDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UltrasonicSpecificObjectData_SignalwayDefaultTypeInternal() {}
  union {
    UltrasonicSpecificObjectData_Signalway _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UltrasonicSpecificObjectData_SignalwayDefaultTypeInternal _UltrasonicSpecificObjectData_Signalway_default_instance_;
PROTOBUF_CONSTEXPR UltrasonicSpecificObjectData::UltrasonicSpecificObjectData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.signalway_)*/{}
  , /*decltype(_impl_.maximum_measurement_distance_sensor_)*/0
  , /*decltype(_impl_.probability_)*/0
  , /*decltype(_impl_.trilateration_status_)*/0
  , /*decltype(_impl_.trend_)*/0} {}
struct UltrasonicSpecificObjectDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UltrasonicSpecificObjectDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UltrasonicSpecificObjectDataDefaultTypeInternal() {}
  union {
    UltrasonicSpecificObjectData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UltrasonicSpecificObjectDataDefaultTypeInternal _UltrasonicSpecificObjectData_default_instance_;
}  // namespace osi3
static ::_pb::Metadata file_level_metadata_osi_5fsensorspecific_2eproto[5];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_osi_5fsensorspecific_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_osi_5fsensorspecific_2eproto = nullptr;

const uint32_t TableStruct_osi_5fsensorspecific_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::osi3::RadarSpecificObjectData, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::osi3::RadarSpecificObjectData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::osi3::RadarSpecificObjectData, _impl_.rcs_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osi3::LidarSpecificObjectData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::osi3::CameraSpecificObjectData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::osi3::UltrasonicSpecificObjectData_Signalway, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::osi3::UltrasonicSpecificObjectData_Signalway, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::osi3::UltrasonicSpecificObjectData_Signalway, _impl_.sender_id_),
  PROTOBUF_FIELD_OFFSET(::osi3::UltrasonicSpecificObjectData_Signalway, _impl_.receiver_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::osi3::UltrasonicSpecificObjectData, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::osi3::UltrasonicSpecificObjectData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::osi3::UltrasonicSpecificObjectData, _impl_.maximum_measurement_distance_sensor_),
  PROTOBUF_FIELD_OFFSET(::osi3::UltrasonicSpecificObjectData, _impl_.probability_),
  PROTOBUF_FIELD_OFFSET(::osi3::UltrasonicSpecificObjectData, _impl_.trilateration_status_),
  PROTOBUF_FIELD_OFFSET(::osi3::UltrasonicSpecificObjectData, _impl_.trend_),
  PROTOBUF_FIELD_OFFSET(::osi3::UltrasonicSpecificObjectData, _impl_.signalway_),
  0,
  1,
  2,
  3,
  ~0u,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, -1, sizeof(::osi3::RadarSpecificObjectData)},
  { 8, -1, -1, sizeof(::osi3::LidarSpecificObjectData)},
  { 14, -1, -1, sizeof(::osi3::CameraSpecificObjectData)},
  { 20, 28, -1, sizeof(::osi3::UltrasonicSpecificObjectData_Signalway)},
  { 30, 41, -1, sizeof(::osi3::UltrasonicSpecificObjectData)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::osi3::_RadarSpecificObjectData_default_instance_._instance,
  &::osi3::_LidarSpecificObjectData_default_instance_._instance,
  &::osi3::_CameraSpecificObjectData_default_instance_._instance,
  &::osi3::_UltrasonicSpecificObjectData_Signalway_default_instance_._instance,
  &::osi3::_UltrasonicSpecificObjectData_default_instance_._instance,
};

const char descriptor_table_protodef_osi_5fsensorspecific_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030osi_sensorspecific.proto\022\004osi3\032\020osi_co"
  "mmon.proto\"&\n\027RadarSpecificObjectData\022\013\n"
  "\003rcs\030\001 \001(\001\"\031\n\027LidarSpecificObjectData\"\032\n"
  "\030CameraSpecificObjectData\"\303\005\n\034Ultrasonic"
  "SpecificObjectData\022+\n#maximum_measuremen"
  "t_distance_sensor\030\001 \001(\001\022\023\n\013probability\030\002"
  " \001(\001\022T\n\024trilateration_status\030\003 \001(\01626.osi"
  "3.UltrasonicSpecificObjectData.Trilatera"
  "tionStatus\0227\n\005trend\030\004 \001(\0162(.osi3.Ultraso"
  "nicSpecificObjectData.Trend\022\?\n\tsignalway"
  "\030\005 \003(\0132,.osi3.UltrasonicSpecificObjectDa"
  "ta.Signalway\032W\n\tSignalway\022#\n\tsender_id\030\001"
  " \001(\0132\020.osi3.Identifier\022%\n\013receiver_id\030\002 "
  "\001(\0132\020.osi3.Identifier\"\251\001\n\023TrilaterationS"
  "tatus\022 \n\034TRILATERATION_STATUS_UNKNOWN\020\000\022"
  "\036\n\032TRILATERATION_STATUS_OTHER\020\001\022)\n%TRILA"
  "TERATION_STATUS_NOT_TRILATERATED\020\002\022%\n!TR"
  "ILATERATION_STATUS_TRILATERATED\020\003\"\213\001\n\005Tr"
  "end\022\021\n\rTREND_UNKNOWN\020\000\022\017\n\013TREND_OTHER\020\001\022"
  "\036\n\032TREND_CONSTANT_APPROACHING\020\002\022\022\n\016TREND"
  "_CONSTANT\020\003\022\025\n\021TREND_APPROACHING\020\004\022\023\n\017TR"
  "END_DEPARTING\020\005B\002H\001"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_osi_5fsensorspecific_2eproto_deps[1] = {
  &::descriptor_table_osi_5fcommon_2eproto,
};
static ::_pbi::once_flag descriptor_table_osi_5fsensorspecific_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_osi_5fsensorspecific_2eproto = {
    false, false, 859, descriptor_table_protodef_osi_5fsensorspecific_2eproto,
    "osi_sensorspecific.proto",
    &descriptor_table_osi_5fsensorspecific_2eproto_once, descriptor_table_osi_5fsensorspecific_2eproto_deps, 1, 5,
    schemas, file_default_instances, TableStruct_osi_5fsensorspecific_2eproto::offsets,
    file_level_metadata_osi_5fsensorspecific_2eproto, file_level_enum_descriptors_osi_5fsensorspecific_2eproto,
    file_level_service_descriptors_osi_5fsensorspecific_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_osi_5fsensorspecific_2eproto_getter() {
  return &descriptor_table_osi_5fsensorspecific_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_osi_5fsensorspecific_2eproto(&descriptor_table_osi_5fsensorspecific_2eproto);
namespace osi3 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UltrasonicSpecificObjectData_TrilaterationStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_osi_5fsensorspecific_2eproto);
  return file_level_enum_descriptors_osi_5fsensorspecific_2eproto[0];
}
bool UltrasonicSpecificObjectData_TrilaterationStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr UltrasonicSpecificObjectData_TrilaterationStatus UltrasonicSpecificObjectData::TRILATERATION_STATUS_UNKNOWN;
constexpr UltrasonicSpecificObjectData_TrilaterationStatus UltrasonicSpecificObjectData::TRILATERATION_STATUS_OTHER;
constexpr UltrasonicSpecificObjectData_TrilaterationStatus UltrasonicSpecificObjectData::TRILATERATION_STATUS_NOT_TRILATERATED;
constexpr UltrasonicSpecificObjectData_TrilaterationStatus UltrasonicSpecificObjectData::TRILATERATION_STATUS_TRILATERATED;
constexpr UltrasonicSpecificObjectData_TrilaterationStatus UltrasonicSpecificObjectData::TrilaterationStatus_MIN;
constexpr UltrasonicSpecificObjectData_TrilaterationStatus UltrasonicSpecificObjectData::TrilaterationStatus_MAX;
constexpr int UltrasonicSpecificObjectData::TrilaterationStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UltrasonicSpecificObjectData_Trend_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_osi_5fsensorspecific_2eproto);
  return file_level_enum_descriptors_osi_5fsensorspecific_2eproto[1];
}
bool UltrasonicSpecificObjectData_Trend_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr UltrasonicSpecificObjectData_Trend UltrasonicSpecificObjectData::TREND_UNKNOWN;
constexpr UltrasonicSpecificObjectData_Trend UltrasonicSpecificObjectData::TREND_OTHER;
constexpr UltrasonicSpecificObjectData_Trend UltrasonicSpecificObjectData::TREND_CONSTANT_APPROACHING;
constexpr UltrasonicSpecificObjectData_Trend UltrasonicSpecificObjectData::TREND_CONSTANT;
constexpr UltrasonicSpecificObjectData_Trend UltrasonicSpecificObjectData::TREND_APPROACHING;
constexpr UltrasonicSpecificObjectData_Trend UltrasonicSpecificObjectData::TREND_DEPARTING;
constexpr UltrasonicSpecificObjectData_Trend UltrasonicSpecificObjectData::Trend_MIN;
constexpr UltrasonicSpecificObjectData_Trend UltrasonicSpecificObjectData::Trend_MAX;
constexpr int UltrasonicSpecificObjectData::Trend_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class RadarSpecificObjectData::_Internal {
 public:
  using HasBits = decltype(std::declval<RadarSpecificObjectData>()._impl_._has_bits_);
  static void set_has_rcs(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

RadarSpecificObjectData::RadarSpecificObjectData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:osi3.RadarSpecificObjectData)
}
RadarSpecificObjectData::RadarSpecificObjectData(const RadarSpecificObjectData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RadarSpecificObjectData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.rcs_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.rcs_ = from._impl_.rcs_;
  // @@protoc_insertion_point(copy_constructor:osi3.RadarSpecificObjectData)
}

inline void RadarSpecificObjectData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.rcs_){0}
  };
}

RadarSpecificObjectData::~RadarSpecificObjectData() {
  // @@protoc_insertion_point(destructor:osi3.RadarSpecificObjectData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RadarSpecificObjectData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RadarSpecificObjectData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RadarSpecificObjectData::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.RadarSpecificObjectData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rcs_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RadarSpecificObjectData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional double rcs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_rcs(&has_bits);
          _impl_.rcs_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RadarSpecificObjectData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osi3.RadarSpecificObjectData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double rcs = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_rcs(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.RadarSpecificObjectData)
  return target;
}

size_t RadarSpecificObjectData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.RadarSpecificObjectData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional double rcs = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RadarSpecificObjectData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RadarSpecificObjectData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RadarSpecificObjectData::GetClassData() const { return &_class_data_; }


void RadarSpecificObjectData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RadarSpecificObjectData*>(&to_msg);
  auto& from = static_cast<const RadarSpecificObjectData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osi3.RadarSpecificObjectData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_rcs()) {
    _this->_internal_set_rcs(from._internal_rcs());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RadarSpecificObjectData::CopyFrom(const RadarSpecificObjectData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.RadarSpecificObjectData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadarSpecificObjectData::IsInitialized() const {
  return true;
}

void RadarSpecificObjectData::InternalSwap(RadarSpecificObjectData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.rcs_, other->_impl_.rcs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RadarSpecificObjectData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_osi_5fsensorspecific_2eproto_getter, &descriptor_table_osi_5fsensorspecific_2eproto_once,
      file_level_metadata_osi_5fsensorspecific_2eproto[0]);
}

// ===================================================================

class LidarSpecificObjectData::_Internal {
 public:
};

LidarSpecificObjectData::LidarSpecificObjectData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:osi3.LidarSpecificObjectData)
}
LidarSpecificObjectData::LidarSpecificObjectData(const LidarSpecificObjectData& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  LidarSpecificObjectData* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:osi3.LidarSpecificObjectData)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LidarSpecificObjectData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LidarSpecificObjectData::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata LidarSpecificObjectData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_osi_5fsensorspecific_2eproto_getter, &descriptor_table_osi_5fsensorspecific_2eproto_once,
      file_level_metadata_osi_5fsensorspecific_2eproto[1]);
}

// ===================================================================

class CameraSpecificObjectData::_Internal {
 public:
};

CameraSpecificObjectData::CameraSpecificObjectData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:osi3.CameraSpecificObjectData)
}
CameraSpecificObjectData::CameraSpecificObjectData(const CameraSpecificObjectData& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CameraSpecificObjectData* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:osi3.CameraSpecificObjectData)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CameraSpecificObjectData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CameraSpecificObjectData::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CameraSpecificObjectData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_osi_5fsensorspecific_2eproto_getter, &descriptor_table_osi_5fsensorspecific_2eproto_once,
      file_level_metadata_osi_5fsensorspecific_2eproto[2]);
}

// ===================================================================

class UltrasonicSpecificObjectData_Signalway::_Internal {
 public:
  using HasBits = decltype(std::declval<UltrasonicSpecificObjectData_Signalway>()._impl_._has_bits_);
  static const ::osi3::Identifier& sender_id(const UltrasonicSpecificObjectData_Signalway* msg);
  static void set_has_sender_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::osi3::Identifier& receiver_id(const UltrasonicSpecificObjectData_Signalway* msg);
  static void set_has_receiver_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::osi3::Identifier&
UltrasonicSpecificObjectData_Signalway::_Internal::sender_id(const UltrasonicSpecificObjectData_Signalway* msg) {
  return *msg->_impl_.sender_id_;
}
const ::osi3::Identifier&
UltrasonicSpecificObjectData_Signalway::_Internal::receiver_id(const UltrasonicSpecificObjectData_Signalway* msg) {
  return *msg->_impl_.receiver_id_;
}
void UltrasonicSpecificObjectData_Signalway::clear_sender_id() {
  if (_impl_.sender_id_ != nullptr) _impl_.sender_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void UltrasonicSpecificObjectData_Signalway::clear_receiver_id() {
  if (_impl_.receiver_id_ != nullptr) _impl_.receiver_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
UltrasonicSpecificObjectData_Signalway::UltrasonicSpecificObjectData_Signalway(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:osi3.UltrasonicSpecificObjectData.Signalway)
}
UltrasonicSpecificObjectData_Signalway::UltrasonicSpecificObjectData_Signalway(const UltrasonicSpecificObjectData_Signalway& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UltrasonicSpecificObjectData_Signalway* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_id_){nullptr}
    , decltype(_impl_.receiver_id_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_sender_id()) {
    _this->_impl_.sender_id_ = new ::osi3::Identifier(*from._impl_.sender_id_);
  }
  if (from._internal_has_receiver_id()) {
    _this->_impl_.receiver_id_ = new ::osi3::Identifier(*from._impl_.receiver_id_);
  }
  // @@protoc_insertion_point(copy_constructor:osi3.UltrasonicSpecificObjectData.Signalway)
}

inline void UltrasonicSpecificObjectData_Signalway::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.sender_id_){nullptr}
    , decltype(_impl_.receiver_id_){nullptr}
  };
}

UltrasonicSpecificObjectData_Signalway::~UltrasonicSpecificObjectData_Signalway() {
  // @@protoc_insertion_point(destructor:osi3.UltrasonicSpecificObjectData.Signalway)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UltrasonicSpecificObjectData_Signalway::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.sender_id_;
  if (this != internal_default_instance()) delete _impl_.receiver_id_;
}

void UltrasonicSpecificObjectData_Signalway::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UltrasonicSpecificObjectData_Signalway::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.UltrasonicSpecificObjectData.Signalway)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.sender_id_ != nullptr);
      _impl_.sender_id_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.receiver_id_ != nullptr);
      _impl_.receiver_id_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UltrasonicSpecificObjectData_Signalway::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .osi3.Identifier sender_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_sender_id(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .osi3.Identifier receiver_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_receiver_id(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UltrasonicSpecificObjectData_Signalway::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osi3.UltrasonicSpecificObjectData.Signalway)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .osi3.Identifier sender_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::sender_id(this),
        _Internal::sender_id(this).GetCachedSize(), target, stream);
  }

  // optional .osi3.Identifier receiver_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::receiver_id(this),
        _Internal::receiver_id(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.UltrasonicSpecificObjectData.Signalway)
  return target;
}

size_t UltrasonicSpecificObjectData_Signalway::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.UltrasonicSpecificObjectData.Signalway)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .osi3.Identifier sender_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.sender_id_);
    }

    // optional .osi3.Identifier receiver_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.receiver_id_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UltrasonicSpecificObjectData_Signalway::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UltrasonicSpecificObjectData_Signalway::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UltrasonicSpecificObjectData_Signalway::GetClassData() const { return &_class_data_; }


void UltrasonicSpecificObjectData_Signalway::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UltrasonicSpecificObjectData_Signalway*>(&to_msg);
  auto& from = static_cast<const UltrasonicSpecificObjectData_Signalway&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osi3.UltrasonicSpecificObjectData.Signalway)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_sender_id()->::osi3::Identifier::MergeFrom(
          from._internal_sender_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_receiver_id()->::osi3::Identifier::MergeFrom(
          from._internal_receiver_id());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UltrasonicSpecificObjectData_Signalway::CopyFrom(const UltrasonicSpecificObjectData_Signalway& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.UltrasonicSpecificObjectData.Signalway)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UltrasonicSpecificObjectData_Signalway::IsInitialized() const {
  return true;
}

void UltrasonicSpecificObjectData_Signalway::InternalSwap(UltrasonicSpecificObjectData_Signalway* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UltrasonicSpecificObjectData_Signalway, _impl_.receiver_id_)
      + sizeof(UltrasonicSpecificObjectData_Signalway::_impl_.receiver_id_)
      - PROTOBUF_FIELD_OFFSET(UltrasonicSpecificObjectData_Signalway, _impl_.sender_id_)>(
          reinterpret_cast<char*>(&_impl_.sender_id_),
          reinterpret_cast<char*>(&other->_impl_.sender_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UltrasonicSpecificObjectData_Signalway::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_osi_5fsensorspecific_2eproto_getter, &descriptor_table_osi_5fsensorspecific_2eproto_once,
      file_level_metadata_osi_5fsensorspecific_2eproto[3]);
}

// ===================================================================

class UltrasonicSpecificObjectData::_Internal {
 public:
  using HasBits = decltype(std::declval<UltrasonicSpecificObjectData>()._impl_._has_bits_);
  static void set_has_maximum_measurement_distance_sensor(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_probability(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_trilateration_status(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_trend(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

UltrasonicSpecificObjectData::UltrasonicSpecificObjectData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:osi3.UltrasonicSpecificObjectData)
}
UltrasonicSpecificObjectData::UltrasonicSpecificObjectData(const UltrasonicSpecificObjectData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UltrasonicSpecificObjectData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.signalway_){from._impl_.signalway_}
    , decltype(_impl_.maximum_measurement_distance_sensor_){}
    , decltype(_impl_.probability_){}
    , decltype(_impl_.trilateration_status_){}
    , decltype(_impl_.trend_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.maximum_measurement_distance_sensor_, &from._impl_.maximum_measurement_distance_sensor_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.trend_) -
    reinterpret_cast<char*>(&_impl_.maximum_measurement_distance_sensor_)) + sizeof(_impl_.trend_));
  // @@protoc_insertion_point(copy_constructor:osi3.UltrasonicSpecificObjectData)
}

inline void UltrasonicSpecificObjectData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.signalway_){arena}
    , decltype(_impl_.maximum_measurement_distance_sensor_){0}
    , decltype(_impl_.probability_){0}
    , decltype(_impl_.trilateration_status_){0}
    , decltype(_impl_.trend_){0}
  };
}

UltrasonicSpecificObjectData::~UltrasonicSpecificObjectData() {
  // @@protoc_insertion_point(destructor:osi3.UltrasonicSpecificObjectData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UltrasonicSpecificObjectData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.signalway_.~RepeatedPtrField();
}

void UltrasonicSpecificObjectData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UltrasonicSpecificObjectData::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.UltrasonicSpecificObjectData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.signalway_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.maximum_measurement_distance_sensor_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.trend_) -
        reinterpret_cast<char*>(&_impl_.maximum_measurement_distance_sensor_)) + sizeof(_impl_.trend_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UltrasonicSpecificObjectData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional double maximum_measurement_distance_sensor = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          _Internal::set_has_maximum_measurement_distance_sensor(&has_bits);
          _impl_.maximum_measurement_distance_sensor_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional double probability = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _Internal::set_has_probability(&has_bits);
          _impl_.probability_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // optional .osi3.UltrasonicSpecificObjectData.TrilaterationStatus trilateration_status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::osi3::UltrasonicSpecificObjectData_TrilaterationStatus_IsValid(val))) {
            _internal_set_trilateration_status(static_cast<::osi3::UltrasonicSpecificObjectData_TrilaterationStatus>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .osi3.UltrasonicSpecificObjectData.Trend trend = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::osi3::UltrasonicSpecificObjectData_Trend_IsValid(val))) {
            _internal_set_trend(static_cast<::osi3::UltrasonicSpecificObjectData_Trend>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // repeated .osi3.UltrasonicSpecificObjectData.Signalway signalway = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_signalway(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UltrasonicSpecificObjectData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:osi3.UltrasonicSpecificObjectData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double maximum_measurement_distance_sensor = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_maximum_measurement_distance_sensor(), target);
  }

  // optional double probability = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_probability(), target);
  }

  // optional .osi3.UltrasonicSpecificObjectData.TrilaterationStatus trilateration_status = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_trilateration_status(), target);
  }

  // optional .osi3.UltrasonicSpecificObjectData.Trend trend = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_trend(), target);
  }

  // repeated .osi3.UltrasonicSpecificObjectData.Signalway signalway = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_signalway_size()); i < n; i++) {
    const auto& repfield = this->_internal_signalway(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.UltrasonicSpecificObjectData)
  return target;
}

size_t UltrasonicSpecificObjectData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.UltrasonicSpecificObjectData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .osi3.UltrasonicSpecificObjectData.Signalway signalway = 5;
  total_size += 1UL * this->_internal_signalway_size();
  for (const auto& msg : this->_impl_.signalway_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional double maximum_measurement_distance_sensor = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional double probability = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional .osi3.UltrasonicSpecificObjectData.TrilaterationStatus trilateration_status = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_trilateration_status());
    }

    // optional .osi3.UltrasonicSpecificObjectData.Trend trend = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_trend());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UltrasonicSpecificObjectData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UltrasonicSpecificObjectData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UltrasonicSpecificObjectData::GetClassData() const { return &_class_data_; }


void UltrasonicSpecificObjectData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UltrasonicSpecificObjectData*>(&to_msg);
  auto& from = static_cast<const UltrasonicSpecificObjectData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osi3.UltrasonicSpecificObjectData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.signalway_.MergeFrom(from._impl_.signalway_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.maximum_measurement_distance_sensor_ = from._impl_.maximum_measurement_distance_sensor_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.probability_ = from._impl_.probability_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.trilateration_status_ = from._impl_.trilateration_status_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.trend_ = from._impl_.trend_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UltrasonicSpecificObjectData::CopyFrom(const UltrasonicSpecificObjectData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.UltrasonicSpecificObjectData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UltrasonicSpecificObjectData::IsInitialized() const {
  return true;
}

void UltrasonicSpecificObjectData::InternalSwap(UltrasonicSpecificObjectData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.signalway_.InternalSwap(&other->_impl_.signalway_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UltrasonicSpecificObjectData, _impl_.trend_)
      + sizeof(UltrasonicSpecificObjectData::_impl_.trend_)
      - PROTOBUF_FIELD_OFFSET(UltrasonicSpecificObjectData, _impl_.maximum_measurement_distance_sensor_)>(
          reinterpret_cast<char*>(&_impl_.maximum_measurement_distance_sensor_),
          reinterpret_cast<char*>(&other->_impl_.maximum_measurement_distance_sensor_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UltrasonicSpecificObjectData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_osi_5fsensorspecific_2eproto_getter, &descriptor_table_osi_5fsensorspecific_2eproto_once,
      file_level_metadata_osi_5fsensorspecific_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace osi3
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::osi3::RadarSpecificObjectData*
Arena::CreateMaybeMessage< ::osi3::RadarSpecificObjectData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osi3::RadarSpecificObjectData >(arena);
}
template<> PROTOBUF_NOINLINE ::osi3::LidarSpecificObjectData*
Arena::CreateMaybeMessage< ::osi3::LidarSpecificObjectData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osi3::LidarSpecificObjectData >(arena);
}
template<> PROTOBUF_NOINLINE ::osi3::CameraSpecificObjectData*
Arena::CreateMaybeMessage< ::osi3::CameraSpecificObjectData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osi3::CameraSpecificObjectData >(arena);
}
template<> PROTOBUF_NOINLINE ::osi3::UltrasonicSpecificObjectData_Signalway*
Arena::CreateMaybeMessage< ::osi3::UltrasonicSpecificObjectData_Signalway >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osi3::UltrasonicSpecificObjectData_Signalway >(arena);
}
template<> PROTOBUF_NOINLINE ::osi3::UltrasonicSpecificObjectData*
Arena::CreateMaybeMessage< ::osi3::UltrasonicSpecificObjectData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::osi3::UltrasonicSpecificObjectData >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
